// Generated by CoffeeScript 1.9.3
var Q, Sensit, endpoint, request;

request = require("request");

Q = require("q");

endpoint = "https://api.sensit.io/v1";

Sensit = (function() {
  function Sensit(token) {
    this.token = token;
    return this;
  }

  Sensit.prototype.request = function(path, method, data) {
    var deferred, options;
    if (method == null) {
      method = "GET";
    }
    if (data == null) {
      data = "";
    }
    deferred = Q.defer();
    options = {
      "url": endpoint + path,
      "method": method,
      "json": true,
      "headers": {
        "Authorization": "Bearer" + this.token
      }
    };
    request(options, function(err, res, body) {
      var ref;
      if (!err && ((ref = res.statusCode) === 200 || ref === 202)) {
        return deferred.resolve(body);
      } else {
        return deferred.reject(body);
      }
    });
    return deferred.promise;
  };

  Sensit.prototype.getAllDevices = function() {
    return this.request("/devices");
  };

  Sensit.prototype.getDevice = function(id_device) {
    return this.request("/devices/" + id_device);
  };

  Sensit.prototype.getAllSensors = function(id_device) {
    var deferred;
    deferred = Q.defer();
    this.getDevice(id_device).then(function(json) {
      return deferred.resolve(json.data.sensors);
    }).fail(function(json) {
      return deferred.reject(body);
    });
    return deferred.promise;
  };

  Sensit.prototype.getSensor = function(id_device, id_sensor) {
    return this.request("/devices/" + id_device + "/sensors/" + id_sensor);
  };

  return Sensit;

})();

module.exports = Sensit;
